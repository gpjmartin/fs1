# 1. Find and Replace <your-name> with your name seperated with a dash (ex. kyle-payne).

# Name of the k8s Secret holding the Starburst License file
starburstPlatformLicense: starburstdata

# The enviroment setting is what you'll see on the main Web UI for the ENVIRONMENT name.
# The sharedSecret is not a k8s Secret it is what the coordinator and worker will use
# to confirm internal communications. More can be found in the SEP doc on this.
environment: pov1
sharedSecret: anystringhere


# As a starting best practice always set the requests and limits memmory and CPU to the same thing.
coordinator:
  resources:
    requests:
      memory: "6Gi"
      cpu: 2
    limits:
      memory: "6Gi"


  etcFiles:
    properties:
      log.properties: |
        io.trino=DEBUG

  # This affinity will ensure the coordinator and worker are deployed in the sep node group.
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: apps
  #           operator: In
  #           values: 
  #           - sep
  additionalProperties: |
    http-server.authentication.allow-insecure-over-http=true
    http-server.process-forwarded=true
    insights.persistence-enabled=true 
    insights.metrics-persistence-enabled=true
    insights.jdbc.url=jdbc:postgresql://graham-martin-bootcamp-postgresql.cupdzjlj8tpf.eu-west-2.rds.amazonaws.com:5432/stsfourtwseven
    insights.jdbc.user=postgres
    insights.jdbc.password=StarburstR0cks!
    insights.authorized-users=starburst_service

  
# If you want the LB to have an internal IP and not a public facing one remove the comment below for the
#  annoticatios line and the line for your cloud.
#    annotations: 
#      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#      networking.gke.io/load-balancer-type: "Internal"
expose:
  type: "ingress"
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: acme
      kubernetes.io/ingress.class: nginx
    host: gmuksc-sep.enablement.starburstdata.net
    ingressName: "starburst-ingress"
    serviceName: "starburst"
    servicePort: 8080
    ingressClassName:
    tls:
      enabled: true
      secretName: tls-secret-starburst
    path: "/"
    pathType: Prefix      


worker:
  replicas: 1
  #autoscaling:
  #  enabled: true
  #  minReplicas: 1
  #  maxReplicas: 3 
  targetCPUUtilizationPercentage: 80 # default is 80
  deploymentTerminationGracePeriodSeconds: 10 # default is 300; it is actually how long the graceful shutdown waits after it receives the SIGTERM
  starburstWorkerShutdownGracePeriodSeconds: 120 # default is 120
  resources:
    requests:
      memory: "6Gi"
      cpu: 2
    limits:
      memory: "6Gi"

  # This affinity will ensure the coordinator and worker are deployed in the sep node group.

userDatabase:
  enabled: true
  users:
    - username: starburst_service
      password: testing
    - username: admin
      password: testing
    - username: caching_service
      password: testing


initFile: |
  #!/bin/bash
  exec /usr/lib/starburst/bin/run-starburst
